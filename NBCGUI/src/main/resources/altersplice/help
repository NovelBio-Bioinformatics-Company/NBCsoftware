-----------------------------
cash version 2.1.0-alpha
-----------------------------
Usage: java -jar -Xmx10g cash.jar <options> --Case:prefix1 case.bam --Control:prefix2 Control.bam --GTF genes.gtf --Output outPath

Example: java -jar -Xmx10g cash.jar --Case:Mutation file1.bam,file2.bam --Control:WildType file3.bam,file4.bam --GTF genes.gtf --Output outPath

Or you can open GUI interface by run: java -jar -Xmx10g cash.jar --GUI

Version:
--version print version information and quit
GUI:
--GUI open the GUI interface

Input:
--Case:prefix1 sorted and indexed case bam files, using comma to seperate files. Index file(bai file) can be absent if parameter "--runSepChr" set to False. 
	just like --Case:KO /home/user/ko1.bam,/home/user/ko2.sorted.bam
--Control:prefix2 sorted and indexed control bam files, using comma to seperate files. Index file(bai file) can be absent if parameter "--runSepChr" set to False.
	just like --Control:WT /home/user/wt1.bam,/home/user/wt2.sorted.bam
--GTF file.gtf
	CASH needs reference gene annotations (eg. gtf/gff file) and RNA-seq data to construct alternative splicing (AS) model within genes

Output:
--Output outFilePrefix
	output directory and prefix, example: --Output /home/user/myresult

Options:
--Combine True/False, default is False
	False: if here are several replications, CASH treats them as biological replicates as usual
	True: if here are several replications, CASH combines case(control) bam files to be one case(control) big bam file

--DisplayAllEvent True/False, default is True
	A gene may have several AS events on different exons, CASH can display all events, or just show only one most significantly event
	True: show all splicing event
	False: show only one most significantly splicing event

--StrandSpecific F/R/NONE, default is NONE
	when the sequence library is strand specific, the parameter is used
	F: first read of the pair-end reads represent the strand of the fragment, just like ion proton
	R: second read of the pair-end reads represent the strand of the fragment

--SpliceCons True/False, default is True
	SpliceCons is used to construct AS model based on RNA-seq data and reference gene annotations, leading to detection of novel AS events in the samples.
	True: construct AS model based on RNA-seq data and gtf/gff files. The process needs more time.
	False: employ AS model inferred from gtf/gff file.

--JuncAllSample int, default is 25
	Doesn't calculate AS event with the sum of all sample junction reads less than JuncAllSample
--JuncOneGroup int, default is 10
	Doesn't calculate AS event with one group of junction reads less than JuncOneGroup

--minAnchorLen/-A int, default is 5
	When counting junction reads, exon-exon junctions spanned by reads with at least this many bases on each side
--minIntronLen/-I int, default is 25
	The gaps between RNA-Seq reads with length > 25bp is considered to be intron
--minJuncReadsForNewIso/-J int, default is 10
	Min junction reads for reconstructing AS site
--runSepChr True/False, default is True
	In order to save the memory, cash detect splicing events for each chromosome seperately. It means cash detect one chromosome then clean the memory and detect another chromosome. So it needs index files of input bam files.
	However, some species such as Hordeum vulgare, have very long chromosome and now htsjdk(v2.9.0) can hardly support the index. So inorder to run cash normally, you can set this param to False and it can run without index files, but may needs some more memory.
